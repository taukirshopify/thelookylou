<div class="page-width  recent-view-container" >
    <div class="view-product">
         <h4 class="product-heading h4" id="recently">{{ section.settings.heading | escape }}  {% render 'icon-caret' %}</h4>
      <div class="recently-viewed " role="list" id="recently-viewed-products">
        <div class="recently-view-product-lists">
          <!-- Recently viewed products will appear here -->
        </div>
      </div>
    </div>
</div>

<script>
function setRecentlyViewedProducts() {
  const productData = {
    productTitle: "{{ product.title }}",
    productImg: "{{ product.featured_media | image_url: width: 533 }}",
    imgWidth:"{{ product.featured_media.width }}",
    imgHeight:"{{ product.featured_media.height }}",
    productPrice: "{{ product.price | money_with_currency }}",
    productUrl: "{{ product.url }}",
    productImageAltText: "{{product.featured_media.alt | escape }}"
  };
  const productList = [];
  let jsonResp, jsonRespArr, jsonRespArrStr;
  const numberOfProducts = 3;
  productList.push(productData);
  const currProductPageTitle = productData.productTitle;
  const productDataString = JSON.stringify(productList);
  const localData = localStorage.getItem("recentlyViewedProduct");

  if (localData === null) {
    localStorage.setItem("recentlyViewedProduct", productDataString);
  } else if (localData) {
    const oldProductData = localStorage.getItem("recentlyViewedProduct");
    const countProductData = (oldProductData.match(/productTitle/g) || []).length;
    const sameProduct = oldProductData.includes(currProductPageTitle);
    if (countProductData < numberOfProducts && sameProduct == false) {
      jsonResp = JSON.parse(oldProductData);
      jsonRespArr = jsonResp.concat(productList);
      jsonRespArrStr = JSON.stringify(jsonRespArr);
      localStorage.setItem("recentlyViewedProduct", jsonRespArrStr);
    } else if (countProductData >= numberOfProducts && sameProduct == false) {
      jsonResp = JSON.parse(oldProductData);
      jsonResp.shift();
      jsonRespArr = jsonResp.concat(productList);
      jsonRespArr = JSON.stringify(jsonRespArr);
      localStorage.setItem("recentlyViewedProduct", jsonRespArr);
    }
  }
}

setRecentlyViewedProducts();
const localViewed = localStorage.recentlyViewedProduct;
function getRecentlyViewedProducts() {
  const productData = JSON.parse(localStorage.getItem("recentlyViewedProduct"));
  const recentlyViewedHtml = [];
  productData.map(item => {
    recentlyViewedHtml.unshift(`
    
     <div class="recently-product product">
         <div class="product-images">
          <a class="full-unstyled-link" href="${item.productUrl}">
    		  <img class="motion-reduce" src="${item.productImg}" width="${item.imgWidth}" height="${item.imgHeight}"  loading="lazy" alt="${item.productImageAltText}"/>
          </a> 
         </div>
       <div class="card__information_content">
       <a class="full-unstyled-link" href="${item.productUrl}">
       <h3 class="product_heading h5"> ${item.productTitle}</h3>
        <div class="price-item price-item--regular"> ${item.productPrice}</div>
       </a> 
       </div>
    </div>
   
   `);
  });
  const newProductData = `${recentlyViewedHtml.join("")}`;
  const fullContent = document.getElementsByClassName("recently-view-product-lists");
  fullContent[0].innerHTML = newProductData;
}

document.addEventListener("DOMContentLoaded", function (event) {
  getRecentlyViewedProducts();
});

</script>
{%- style -%}
  #recently-viewed-products {display:none;}
  .recently-view-product-lists{position: fixed; cursor: pointer; right: 15px; width: 199px; top: 200px; text-align: center; z-index: 3; padding: 15px; background-color: var(--gradient-base-accent-2); box-shadow: -1px 2px 0 var(--gradient-base-accent-2); display: flex; flex-wrap: wrap; justify-content: space-evenly; transition: all cubic-bezier(.47,1.21,.47,1.21) .3s; -webkit-transition: all cubic-bezier(.47,1.21,.47,1.21) .3s;}
  #recently { position: relative; line-height: normal; display: flex; align-items: center; width: 100%; justify-content: center; margin: 0 0 -2px 0; padding: 0; font-family: var(--font-body-family);}
  .recent-view-container {  background: var(--gradient-base-accent-2);  position: fixed;  cursor: pointer;  right: 15px;  width: 200px;  top: 165px;  text-align: center;  z-index: 3;  padding: 15px;  box-shadow:0px 0px 1px 1px var(--gradient-base-background-1);  display: flex;  flex-wrap: wrap;  justify-content: center;  transition: all cubic-bezier(.47,1.21,.47,1.21) .3s; 
   -webkit-transition: all cubic-bezier(.47,1.21,.47,1.21) .3s; opacity:1;}
  .recent-view-container:hover{opacity:1;} 
  .recently-product {  line-height: normal;  font-size: 16px;  margin-top: 10px;  width: 30%;}
   .card__information_content > a { position: absolute; opacity: 1; visibility: hidden; left: auto; width: 100%; top: 100%; bottom: auto; padding: 15px; transition: all cubic-bezier(.47,1.21,.47,1.21) .3s;
    -webkit-transition: all cubic-bezier(.47,1.21,.47,1.21) .3s; display: flex; justify-content: center; flex-wrap: wrap; align-items: center; background-color: var(--gradient-base-background-1); left: -10px; box-shadow:0px 0px 1px 1px var(--gradient-base-background-1);}
  .recently-view-product-lists .recently-product:hover .card__information_content > a { left: 0; opacity: 1; visibility: visible;}
  .product-images{ margin: 0; position: relative; width: 100%;}
  .recently-product product .card__information_content{ padding-top: 15px; margin-bottom: -15px;}
  .recently-view-product-lists .recently-product:hover .product-images > a { box-shadow: 0 0 0 2px var(--gradient-base-background-2) inset;}
  .recently-view-product-lists .recently-product .product-images > a { transition: all var(--duration-default) linear; -webkit-transition:  all var(--duration-default) linear; width: 100%; height: auto; box-shadow: 0 0 0 2px transparent inset; display: flex;}
  .product-heading svg { width: 13px; height: 13px; margin-bottom: -4px; margin-left: 8px; font-weight: 800;}
 .recently-view-product-lists .recently-product .card__information_content > a .price-item { font-size: 100%; margin-top: 5px; display: block; width: 100%; font-weight: bold;}
 .recently-view-product-lists .recently-product .product-images > a img { z-index: -1; position:relative;}
 .recently-view-product-lists .recently-product .card__information_content h3.product_heading.h5 { margin: 0; transition: var(--duration-default) linear; font-size: 1.6rem; }
 .recently-view-product-lists .recently-product h3.product_heading:hover {color: var(--gradient-base-background-2);}
  @media screen and (max-width:576px) {
       .recent-view-container { display: none; }                                                                 
  }
{%- endstyle -%}

{% schema %}
  {
    "name": "Recent Products",
    "settings": [
      {
      "type": "text",
      "id": "heading",
      "default": "Recently Viewed",
      "label": "Title"
    }
    ]
  }
{% endschema %}